{
  "hash": "257d88ca4b77f3e140c528c417d52980",
  "result": {
    "markdown": "---\ntitle: Opening Day\ndate: '2015-04-09'\ndate-modified: '2023-02-24'\ncategories:\n  - baseball\n  - code\nimage: max-scherzer-031215.jpg\nfig-cap-location: bottom\ntbl-cap-location: top\nformat:\n  html:\n    code-tools: true\n---\n\nIn honor of Opening Day (and the Nats' loss), I wanted to see which teams have had the most success on opening day. \n\nIt's...the Mets (?)\n\n::: {#tbl-openingday-winpct .cell tbl-cap='Opening Day Records, 1980 -- 2014' execution_count=1}\n``` {.python .cell-code code-fold=\"true\" code-line-numbers=\"true\"}\nimport os, requests, zipfile, io\nfrom IPython.display import HTML#, Markdown\n#from itables import show\nimport pandas as pd\n\nDATADIR = os.path.join(os.getenv(\"MY_PROJECT_DIR\"), \"data\", \"gl\") # Using Quarto's _environment.local file (not saved to GitHub) to set the directory where this project lives\n\nif not os.path.exists(DATADIR):\n    os.makedirs(DATADIR)\n\nDOWNLOADFROMRS = True\n\nif DOWNLOADFROMRS:\n    r = requests.get(\"https://www.retrosheet.org/CurrentNames.csv\")\n    with open(os.path.join(DATADIR,\"CurrentNames.csv\"),\"w\") as f:\n        f.write(\"current_team_id,hist_franchise_id,league,division,location,nickname,alt_nickname,first_used,last_used,city,state\\n\")\n        f.write(r.text)\n\n\"\"\"\nFrom https://www.retrosheet.org/Nickname.htm:\nThe fields are:\n\nCurrent franchise ID\nFranchise ID (may the same as current one) for earlier data\nLeague\nDivision (blank before divisional play)\nLocation name (e.g. Brooklyn, Texas)\nNickname\nAlternate nicknames (blank if none for the period)\nDate of the first game with this combination\nDate of the last game with combination (blank if current one)\nCity\nState\n\"\"\"\n\nif DOWNLOADFROMRS:\n    r = requests.get(\"https://www.retrosheet.org/gamelogs/glfields.txt\")\n    with open(os.path.join(DATADIR, \"glfields.txt\"),\"w\") as f:\n        f.write(r.text)\n\nif DOWNLOADFROMRS:\n    for y in range(1980,2015):\n        zip_file_url = f\"https://www.retrosheet.org/gamelogs/gl{y}.zip\"\n        r = requests.get(zip_file_url)\n        z = zipfile.ZipFile(io.BytesIO(r.content))\n        z.extractall(path=DATADIR)\n\nfields = ['date','visit_team_id','visit_team_league','visit_game_number','home_team_id','home_team_league','home_game_number','visit_final_score','home_final_score']\ncols = [0,3,4,5,6,7,8,9,10]\n\nnamefields = ['current_team_id','hist_franchise_id','league','division','location','nickname','alt_nickname','first_used','last_used','city','state']\n\ndef assign_outcome(row):\n    if row.final_score>row.opponent_final_score:\n        return 'W'\n    elif row.final_score<row.opponent_final_score:\n        return 'L'\n\ndef read_in_data(year):\n    dat = pd.read_csv(f\"{DATADIR}/GL{year}.txt\", header=None,names=fields, usecols=cols, parse_dates=['date'])\n    v = dat.loc[dat.visit_game_number==1,].rename(columns=lambda x: x.replace('visit_','')).rename(columns=lambda x: x.replace('home_','opponent_'))\n    h = dat.loc[dat.home_game_number==1,].rename(columns=lambda x: x.replace('home_','')).rename(columns=lambda x: x.replace('visit_','opponent_'))\n    games = pd.concat([v,h], ignore_index=True)\n    games['outcome'] = games.apply(assign_outcome,axis=1)\n    games['season'] = year\n    return games\n\nteamnames = pd.read_csv(os.path.join(DATADIR,'CurrentNames.csv'), parse_dates=['first_used','last_used']) \n\ndf = pd.DataFrame()\nfor year in range(1980,2015):\n    g = read_in_data(year)\n    df = pd.concat([df,g], ignore_index=True)\n\nteamsgrouped = df.groupby('team_id')\n\npct = teamsgrouped.apply(lambda x: x.outcome.value_counts()/x.outcome.size).round(3)*100\npct = pct.unstack(1)\npct = pct.sort_values('W', ascending=False) ## decent answer here, but let's merge in team names\n\npctteamids = list(pct.index.values)\npctteams = teamnames[teamnames.hist_franchise_id.isin(pctteamids)].sort_values('last_used').drop_duplicates(subset='hist_franchise_id',keep=\"last\")\n\nfinaltable = pct.merge(pctteams, left_index=True, right_on='hist_franchise_id', how=\"left\").reset_index().assign(Team = lambda x: x['location'] + \" \" + x['nickname']).rename(columns={'W':'Wins','L':'Losses'})[['Team','Wins','Losses']]\n\nHTML(finaltable.to_html(index=False))  # alternative to using the itables package\n# with pd.option_context(\"display.float_format\", \"{:,.1f}%\".format):\n#     show(finaltable, dom=\"lrtp\", lengthMenu = [5,10,len(finaltable)]) #paging=False to show full table\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>Team</th>\n      <th>Wins</th>\n      <th>Losses</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>New York Mets</td>\n      <td>71.4</td>\n      <td>28.6</td>\n    </tr>\n    <tr>\n      <td>Baltimore Orioles</td>\n      <td>65.7</td>\n      <td>34.3</td>\n    </tr>\n    <tr>\n      <td>Chicago White Sox</td>\n      <td>65.7</td>\n      <td>34.3</td>\n    </tr>\n    <tr>\n      <td>Los Angeles Angels</td>\n      <td>61.1</td>\n      <td>38.9</td>\n    </tr>\n    <tr>\n      <td>Seattle Mariners</td>\n      <td>60.0</td>\n      <td>40.0</td>\n    </tr>\n    <tr>\n      <td>Arizona Diamondbacks</td>\n      <td>58.8</td>\n      <td>41.2</td>\n    </tr>\n    <tr>\n      <td>Atlanta Braves</td>\n      <td>57.1</td>\n      <td>42.9</td>\n    </tr>\n    <tr>\n      <td>Los Angeles Dodgers</td>\n      <td>54.3</td>\n      <td>45.7</td>\n    </tr>\n    <tr>\n      <td>San Francisco Giants</td>\n      <td>54.3</td>\n      <td>45.7</td>\n    </tr>\n    <tr>\n      <td>New York Yankees</td>\n      <td>54.3</td>\n      <td>45.7</td>\n    </tr>\n    <tr>\n      <td>Cincinnati Reds</td>\n      <td>54.3</td>\n      <td>42.9</td>\n    </tr>\n    <tr>\n      <td>Milwaukee Brewers</td>\n      <td>54.3</td>\n      <td>42.9</td>\n    </tr>\n    <tr>\n      <td>Detroit Tigers</td>\n      <td>54.3</td>\n      <td>45.7</td>\n    </tr>\n    <tr>\n      <td>Tampa Bay Rays</td>\n      <td>52.9</td>\n      <td>47.1</td>\n    </tr>\n    <tr>\n      <td>Florida Marlins</td>\n      <td>52.6</td>\n      <td>47.4</td>\n    </tr>\n    <tr>\n      <td>Toronto Blue Jays</td>\n      <td>51.4</td>\n      <td>48.6</td>\n    </tr>\n    <tr>\n      <td>St. Louis Cardinals</td>\n      <td>51.4</td>\n      <td>48.6</td>\n    </tr>\n    <tr>\n      <td>Colorado Rockies</td>\n      <td>50.0</td>\n      <td>50.0</td>\n    </tr>\n    <tr>\n      <td>Texas Rangers</td>\n      <td>48.6</td>\n      <td>51.4</td>\n    </tr>\n    <tr>\n      <td>Pittsburgh Pirates</td>\n      <td>48.6</td>\n      <td>51.4</td>\n    </tr>\n    <tr>\n      <td>Montreal Expos</td>\n      <td>48.0</td>\n      <td>52.0</td>\n    </tr>\n    <tr>\n      <td>California Angels</td>\n      <td>47.1</td>\n      <td>52.9</td>\n    </tr>\n    <tr>\n      <td>Chicago Cubs</td>\n      <td>45.7</td>\n      <td>54.3</td>\n    </tr>\n    <tr>\n      <td>Boston Red Sox</td>\n      <td>45.7</td>\n      <td>54.3</td>\n    </tr>\n    <tr>\n      <td>Houston Astros</td>\n      <td>42.9</td>\n      <td>57.1</td>\n    </tr>\n    <tr>\n      <td>Washington Nationals</td>\n      <td>40.0</td>\n      <td>60.0</td>\n    </tr>\n    <tr>\n      <td>San Diego Padres</td>\n      <td>40.0</td>\n      <td>60.0</td>\n    </tr>\n    <tr>\n      <td>Minnesota Twins</td>\n      <td>40.0</td>\n      <td>60.0</td>\n    </tr>\n    <tr>\n      <td>Cleveland Indians</td>\n      <td>40.0</td>\n      <td>60.0</td>\n    </tr>\n    <tr>\n      <td>Philadelphia Phillies</td>\n      <td>37.1</td>\n      <td>62.9</td>\n    </tr>\n    <tr>\n      <td>Oakland Athletics</td>\n      <td>37.1</td>\n      <td>62.9</td>\n    </tr>\n    <tr>\n      <td>Miami Marlins</td>\n      <td>33.3</td>\n      <td>66.7</td>\n    </tr>\n    <tr>\n      <td>Kansas City Royals</td>\n      <td>28.6</td>\n      <td>71.4</td>\n    </tr>\n  </tbody>\n</table>\n```\n:::\n:::\n\n\nHere's how I did it:\n\nI downloaded[^fnmanual] game logs from 1980 -- 2014 from [RetroSheet](http://www.retrosheet.org/gamelogs/index.html) and wrote the following script to analyze them. The key was changing the \"dyadic\" structure of the raw game logs (one row contains information about the two teams playing the game) into one that had one row for each team. I did this in the `read_in_data` function:\n\n::: {.cell execution_count=2}\n``` {.python .cell-code code-fold=\"false\"}\ndef read_in_data(year):\n    dat = pd.read_csv(f\"{DATADIR}/GL{year}.txt\", header=None,names=fields, usecols=cols, parse_dates=['date'])\n    v = dat.loc[dat.visit_game_number==1,].rename(columns=lambda x: x.replace('visit_','')).rename(columns=lambda x: x.replace('home_','opponent_'))\n    h = dat.loc[dat.home_game_number==1,].rename(columns=lambda x: x.replace('home_','')).rename(columns=lambda x: x.replace('visit_','opponent_'))\n    games = pd.concat([v,h], ignore_index=True)\n    games['outcome'] = games.apply(assign_outcome,axis=1)\n    games['season'] = year\n    return games\n```\n:::\n\n\nHere's an example of one year's worth of gamelog data once it's been run through `read_in_data`. 2014 was a bit of an odd season, since the [Dodgers and the Diamondbacks started their seasons on March 22](https://www.mlb.com/schedule/2014-03-22) by [playing three exhibition games in Syndey, Australia](https://sabr.org/gamesproj/game/march-22-2014-opening-day-down-under-as-dodgers-defeat-diamondbacks/). Each team went on to be another team's opening day opponent -- the Dodgers faced the Padres and the Diamondbacks went up against the Giants.\n\n::: {.cell .column-page execution_count=3}\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>date</th>\n      <th>team_id</th>\n      <th>game_number</th>\n      <th>opponent_team_id</th>\n      <th>opponent_game_number</th>\n      <th>final_score</th>\n      <th>opponent_final_score</th>\n      <th>outcome</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>2014-03-22</td>\n      <td>LAN</td>\n      <td>1</td>\n      <td>ARI</td>\n      <td>1</td>\n      <td>3</td>\n      <td>1</td>\n      <td>W</td>\n    </tr>\n    <tr>\n      <td>2014-03-22</td>\n      <td>ARI</td>\n      <td>1</td>\n      <td>LAN</td>\n      <td>1</td>\n      <td>1</td>\n      <td>3</td>\n      <td>L</td>\n    </tr>\n    <tr>\n      <td>2014-03-30</td>\n      <td>SDN</td>\n      <td>1</td>\n      <td>LAN</td>\n      <td>3</td>\n      <td>3</td>\n      <td>1</td>\n      <td>W</td>\n    </tr>\n    <tr>\n      <td>2014-03-31</td>\n      <td>MIA</td>\n      <td>1</td>\n      <td>COL</td>\n      <td>1</td>\n      <td>10</td>\n      <td>1</td>\n      <td>W</td>\n    </tr>\n    <tr>\n      <td>2014-03-31</td>\n      <td>CIN</td>\n      <td>1</td>\n      <td>SLN</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>L</td>\n    </tr>\n    <tr>\n      <td>2014-03-31</td>\n      <td>TEX</td>\n      <td>1</td>\n      <td>PHI</td>\n      <td>1</td>\n      <td>10</td>\n      <td>14</td>\n      <td>L</td>\n    </tr>\n    <tr>\n      <td>2014-03-31</td>\n      <td>TBA</td>\n      <td>1</td>\n      <td>TOR</td>\n      <td>1</td>\n      <td>9</td>\n      <td>2</td>\n      <td>W</td>\n    </tr>\n    <tr>\n      <td>2014-03-31</td>\n      <td>OAK</td>\n      <td>1</td>\n      <td>CLE</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2</td>\n      <td>L</td>\n    </tr>\n    <tr>\n      <td>2014-03-31</td>\n      <td>DET</td>\n      <td>1</td>\n      <td>KCA</td>\n      <td>1</td>\n      <td>4</td>\n      <td>3</td>\n      <td>W</td>\n    </tr>\n    <tr>\n      <td>2014-03-31</td>\n      <td>CHA</td>\n      <td>1</td>\n      <td>MIN</td>\n      <td>1</td>\n      <td>5</td>\n      <td>3</td>\n      <td>W</td>\n    </tr>\n    <tr>\n      <td>2014-03-31</td>\n      <td>BAL</td>\n      <td>1</td>\n      <td>BOS</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>W</td>\n    </tr>\n    <tr>\n      <td>2014-03-31</td>\n      <td>ANA</td>\n      <td>1</td>\n      <td>SEA</td>\n      <td>1</td>\n      <td>3</td>\n      <td>10</td>\n      <td>L</td>\n    </tr>\n    <tr>\n      <td>2014-03-31</td>\n      <td>PIT</td>\n      <td>1</td>\n      <td>CHN</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>W</td>\n    </tr>\n    <tr>\n      <td>2014-03-31</td>\n      <td>CHN</td>\n      <td>1</td>\n      <td>PIT</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>L</td>\n    </tr>\n    <tr>\n      <td>2014-03-31</td>\n      <td>WAS</td>\n      <td>1</td>\n      <td>NYN</td>\n      <td>1</td>\n      <td>9</td>\n      <td>7</td>\n      <td>W</td>\n    </tr>\n    <tr>\n      <td>2014-03-31</td>\n      <td>ATL</td>\n      <td>1</td>\n      <td>MIL</td>\n      <td>1</td>\n      <td>0</td>\n      <td>2</td>\n      <td>L</td>\n    </tr>\n    <tr>\n      <td>2014-03-31</td>\n      <td>COL</td>\n      <td>1</td>\n      <td>MIA</td>\n      <td>1</td>\n      <td>1</td>\n      <td>10</td>\n      <td>L</td>\n    </tr>\n    <tr>\n      <td>2014-03-31</td>\n      <td>SLN</td>\n      <td>1</td>\n      <td>CIN</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>W</td>\n    </tr>\n    <tr>\n      <td>2014-03-31</td>\n      <td>SFN</td>\n      <td>1</td>\n      <td>ARI</td>\n      <td>3</td>\n      <td>9</td>\n      <td>8</td>\n      <td>W</td>\n    </tr>\n    <tr>\n      <td>2014-03-31</td>\n      <td>PHI</td>\n      <td>1</td>\n      <td>TEX</td>\n      <td>1</td>\n      <td>14</td>\n      <td>10</td>\n      <td>W</td>\n    </tr>\n    <tr>\n      <td>2014-03-31</td>\n      <td>TOR</td>\n      <td>1</td>\n      <td>TBA</td>\n      <td>1</td>\n      <td>2</td>\n      <td>9</td>\n      <td>L</td>\n    </tr>\n    <tr>\n      <td>2014-03-31</td>\n      <td>CLE</td>\n      <td>1</td>\n      <td>OAK</td>\n      <td>1</td>\n      <td>2</td>\n      <td>0</td>\n      <td>W</td>\n    </tr>\n    <tr>\n      <td>2014-03-31</td>\n      <td>KCA</td>\n      <td>1</td>\n      <td>DET</td>\n      <td>1</td>\n      <td>3</td>\n      <td>4</td>\n      <td>L</td>\n    </tr>\n    <tr>\n      <td>2014-03-31</td>\n      <td>MIN</td>\n      <td>1</td>\n      <td>CHA</td>\n      <td>1</td>\n      <td>3</td>\n      <td>5</td>\n      <td>L</td>\n    </tr>\n    <tr>\n      <td>2014-03-31</td>\n      <td>BOS</td>\n      <td>1</td>\n      <td>BAL</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>L</td>\n    </tr>\n    <tr>\n      <td>2014-03-31</td>\n      <td>SEA</td>\n      <td>1</td>\n      <td>ANA</td>\n      <td>1</td>\n      <td>10</td>\n      <td>3</td>\n      <td>W</td>\n    </tr>\n    <tr>\n      <td>2014-03-31</td>\n      <td>MIL</td>\n      <td>1</td>\n      <td>ATL</td>\n      <td>1</td>\n      <td>2</td>\n      <td>0</td>\n      <td>W</td>\n    </tr>\n    <tr>\n      <td>2014-03-31</td>\n      <td>NYN</td>\n      <td>1</td>\n      <td>WAS</td>\n      <td>1</td>\n      <td>7</td>\n      <td>9</td>\n      <td>L</td>\n    </tr>\n    <tr>\n      <td>2014-04-01</td>\n      <td>NYA</td>\n      <td>1</td>\n      <td>HOU</td>\n      <td>1</td>\n      <td>2</td>\n      <td>6</td>\n      <td>L</td>\n    </tr>\n    <tr>\n      <td>2014-04-01</td>\n      <td>HOU</td>\n      <td>1</td>\n      <td>NYA</td>\n      <td>1</td>\n      <td>6</td>\n      <td>2</td>\n      <td>W</td>\n    </tr>\n  </tbody>\n</table>\n```\n:::\n:::\n\n\nThe results table includes two teams that have renamed themselves (the Angels and the Marlins), and one that moved and changed names (Expos). I'd like to update my script to deal with these, but should I really lump the Expos in with the Nats?\n\nAlso, I was relieved to see the Dodgers and the Giants were tied, at least.\n\n[^fnmanual]: I did this manually back in 2015, but as I was porting this to the new site, I wrote a script to automatically download and unzip the files.\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}