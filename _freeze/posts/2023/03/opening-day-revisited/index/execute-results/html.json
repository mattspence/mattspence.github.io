{
  "hash": "e8b87e6f219c370e38488aead632e678",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Revisiting Opening Day Win-Loss Statistics\ndate: '2023-03-04'\ncategories:\n  - baseball\n  - code\nimage: patrick_corbin.jpg\nfig-cap-location: bottom\ntbl-cap-location: top\ndescription: Revisiting Opening Day win-loss statistics with new data and new methods\nformat:\n  html:\n    code-tools: true\n---\n\nI wanted to revisit my [earlier post](../../../2015/04/opening-day/index.qmd) about opening day win-loss statistics to update the numbers with eight additional years of data and also to fix the a few issues that I didn't have the skills to address back in 2015.\n\nFirst, my old script had separate entries for the two teams that renamed themselves during the period --- the Los Angeles (California) Angels and the Miami (Florida) Marlins. I wanted those combined, no question. I also wondered about what to do with a franchise that renamed itself and moved. Should the Expos and the Nationals really get combined into a single franchise record? \n\nMy first attempts to fix the former and keep the Nats/Expos apart were unsuccessful. I combined the renamed teams by creating the win-loss records by `team_id` (as before), but then merging those with the historical franchise ID (`hist_franchise_id`, as before) *and* bringing over the `current_team_id` as well. \n\n::: {#tbl-openingday-winpct .cell tbl-cap='Opening Day Records, 1980 -- 2022' execution_count=1}\n``` {.python .cell-code code-fold=\"true\" code-line-numbers=\"true\"}\nimport os, requests, zipfile, io\nfrom IPython.display import HTML, Markdown\n#from itables import show\nimport pandas as pd\n\nDATADIR = os.path.join(os.getenv(\"MY_PROJECT_DIR\"), \"data\", \"gl\")\nYEARSTART, YEAREND = 1980, 2022 # will add +1 to YEAREND for range()\n\nif not os.path.exists(DATADIR):\n    os.makedirs(DATADIR)\n\nif not os.path.exists(os.path.join(DATADIR,\"CurrentNames.csv\")):\n    r = requests.get(\"https://www.retrosheet.org/CurrentNames.csv\")\n    with open(os.path.join(DATADIR,\"CurrentNames.csv\"),\"w\") as f:\n        f.write(\"current_team_id,hist_franchise_id,league,division,location,nickname,alt_nickname,first_used,last_used,city,state\\n\")\n        f.write(r.text)\n\nfor year in range(YEARSTART,YEAREND+1): \n    if not os.path.exists(os.path.join(DATADIR,f\"gl{year}.txt\")):\n        zip_file_url = f\"https://www.retrosheet.org/gamelogs/gl{year}.zip\"\n        r = requests.get(zip_file_url)\n        z = zipfile.ZipFile(io.BytesIO(r.content))\n        z.extractall(path=DATADIR)\n\nfields = ['date','visit_team_id','visit_team_league','visit_game_number','home_team_id','home_team_league','home_game_number','visit_final_score','home_final_score']\ncols = [0,3,4,5,6,7,8,9,10]\n\ndef assign_outcome(row):\n    if row.final_score>row.opponent_final_score:\n        return 'W'\n    elif row.final_score<row.opponent_final_score:\n        return 'L'\n    else:\n        return 'T' # 2000's opening of Reds vs Brewers ended in an official tie\n\ndef read_in_data(year):\n    dat = pd.read_csv(f\"{DATADIR}/gl{year}.txt\", header=None,names=fields, usecols=cols, parse_dates=['date'])\n    v = dat.loc[dat.visit_game_number==1,].rename(columns=lambda x: x.replace('visit_','')).rename(columns=lambda x: x.replace('home_','opponent_'))\n    h = dat.loc[dat.home_game_number==1,].rename(columns=lambda x: x.replace('home_','')).rename(columns=lambda x: x.replace('visit_','opponent_'))\n    games = pd.concat([v,h], ignore_index=True)\n    games['outcome'] = games.apply(assign_outcome,axis=1)\n    games['season'] = year\n    return games\n\nteamnames = pd.read_csv(os.path.join(DATADIR,'CurrentNames.csv'), parse_dates=['first_used','last_used']) \n\ndflist = []\nfor year in range(YEARSTART,YEAREND+1):\n    g = read_in_data(year)\n    dflist.append(g)\n    # df = pd.concat([df,g], ignore_index=True)\n\ndf = pd.concat(dflist, ignore_index=True, sort=False)\n\n# def f(group):\n#     return pd.DataFrame({'count': group.value_counts(),\n#                          'total': group.size})\n\nwinpct = (df.groupby('team_id').apply(lambda x: x.outcome.value_counts()/x.outcome.size, include_groups=False).round(3)*100)[:,\"W\"].sort_values(ascending=False)\n\nwlcnt = df.groupby('team_id').apply(lambda x: x.outcome.value_counts(), include_groups=False).unstack(-1)\n\n# drop any team name that was last_used before the start of our analysis. \n# \"Drop duplicates\" by current_team_id and hist_franchise_id will get rid of divisional changes (e.g. Pirates moving from NL E to NL C in 1994) and minor name changes (TBA Devil Rays --> Rays; Anaheim Angles --> LA Angels)\npctteams = teamnames[(teamnames['last_used'].dt.year>YEARSTART)|(teamnames['last_used'].isna())].drop_duplicates(subset=['current_team_id','hist_franchise_id'], keep=\"last\") \n\nwlcntteam = pd.merge(wlcnt, pctteams[['current_team_id', 'hist_franchise_id']], left_index=True, right_on='hist_franchise_id', how=\"left\").groupby(['current_team_id'])[['W','L','T']].sum()\n\nfinaltable = pd.merge(wlcntteam, pctteams, left_index=True, right_on='hist_franchise_id', how=\"left\").assign(Team = lambda x: x['location'] + \" \" + x['nickname'], WnPct = lambda x: 100*round(x['W']/(x['W']+x['L']+x['T']), 3)).rename(columns={'W':'Wins','L':'Losses','T':'Ties', 'WnPct':'Win (%)'})[['Team','Wins','Losses', 'Ties', 'Win (%)']].sort_values(\"Win (%)\", ascending=False)\n\nHTML(finaltable.to_html(index=False))  \n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```{=html}\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>Team</th>\n      <th>Wins</th>\n      <th>Losses</th>\n      <th>Ties</th>\n      <th>Win (%)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>New York Mets</td>\n      <td>31.0</td>\n      <td>12.0</td>\n      <td>0.0</td>\n      <td>72.1</td>\n    </tr>\n    <tr>\n      <td>Baltimore Orioles</td>\n      <td>28.0</td>\n      <td>15.0</td>\n      <td>0.0</td>\n      <td>65.1</td>\n    </tr>\n    <tr>\n      <td>Seattle Mariners</td>\n      <td>26.0</td>\n      <td>17.0</td>\n      <td>0.0</td>\n      <td>60.5</td>\n    </tr>\n    <tr>\n      <td>Chicago White Sox</td>\n      <td>25.0</td>\n      <td>18.0</td>\n      <td>0.0</td>\n      <td>58.1</td>\n    </tr>\n    <tr>\n      <td>Los Angeles Dodgers</td>\n      <td>25.0</td>\n      <td>18.0</td>\n      <td>0.0</td>\n      <td>58.1</td>\n    </tr>\n    <tr>\n      <td>Detroit Tigers</td>\n      <td>25.0</td>\n      <td>18.0</td>\n      <td>0.0</td>\n      <td>58.1</td>\n    </tr>\n    <tr>\n      <td>Cincinnati Reds</td>\n      <td>24.0</td>\n      <td>18.0</td>\n      <td>1.0</td>\n      <td>55.8</td>\n    </tr>\n    <tr>\n      <td>St. Louis Cardinals</td>\n      <td>23.0</td>\n      <td>20.0</td>\n      <td>0.0</td>\n      <td>53.5</td>\n    </tr>\n    <tr>\n      <td>New York Yankees</td>\n      <td>23.0</td>\n      <td>20.0</td>\n      <td>0.0</td>\n      <td>53.5</td>\n    </tr>\n    <tr>\n      <td>Toronto Blue Jays</td>\n      <td>23.0</td>\n      <td>20.0</td>\n      <td>0.0</td>\n      <td>53.5</td>\n    </tr>\n    <tr>\n      <td>San Francisco Giants</td>\n      <td>23.0</td>\n      <td>20.0</td>\n      <td>0.0</td>\n      <td>53.5</td>\n    </tr>\n    <tr>\n      <td>Houston Astros</td>\n      <td>23.0</td>\n      <td>20.0</td>\n      <td>0.0</td>\n      <td>53.5</td>\n    </tr>\n    <tr>\n      <td>Colorado Rockies</td>\n      <td>16.0</td>\n      <td>14.0</td>\n      <td>0.0</td>\n      <td>53.3</td>\n    </tr>\n    <tr>\n      <td>Tampa Bay Rays</td>\n      <td>13.0</td>\n      <td>12.0</td>\n      <td>0.0</td>\n      <td>52.0</td>\n    </tr>\n    <tr>\n      <td>Arizona Diamondbacks</td>\n      <td>13.0</td>\n      <td>12.0</td>\n      <td>0.0</td>\n      <td>52.0</td>\n    </tr>\n    <tr>\n      <td>Atlanta Braves</td>\n      <td>22.0</td>\n      <td>21.0</td>\n      <td>0.0</td>\n      <td>51.2</td>\n    </tr>\n    <tr>\n      <td>Milwaukee Brewers</td>\n      <td>22.0</td>\n      <td>20.0</td>\n      <td>1.0</td>\n      <td>51.2</td>\n    </tr>\n    <tr>\n      <td>Chicago Cubs</td>\n      <td>21.0</td>\n      <td>22.0</td>\n      <td>0.0</td>\n      <td>48.8</td>\n    </tr>\n    <tr>\n      <td>Pittsburgh Pirates</td>\n      <td>20.0</td>\n      <td>23.0</td>\n      <td>0.0</td>\n      <td>46.5</td>\n    </tr>\n    <tr>\n      <td>Los Angeles Angels</td>\n      <td>20.0</td>\n      <td>23.0</td>\n      <td>0.0</td>\n      <td>46.5</td>\n    </tr>\n    <tr>\n      <td>Boston Red Sox</td>\n      <td>20.0</td>\n      <td>23.0</td>\n      <td>0.0</td>\n      <td>46.5</td>\n    </tr>\n    <tr>\n      <td>Washington Nationals</td>\n      <td>20.0</td>\n      <td>23.0</td>\n      <td>0.0</td>\n      <td>46.5</td>\n    </tr>\n    <tr>\n      <td>Texas Rangers</td>\n      <td>19.0</td>\n      <td>24.0</td>\n      <td>0.0</td>\n      <td>44.2</td>\n    </tr>\n    <tr>\n      <td>Miami Marlins</td>\n      <td>12.0</td>\n      <td>18.0</td>\n      <td>0.0</td>\n      <td>40.0</td>\n    </tr>\n    <tr>\n      <td>Philadelphia Phillies</td>\n      <td>17.0</td>\n      <td>26.0</td>\n      <td>0.0</td>\n      <td>39.5</td>\n    </tr>\n    <tr>\n      <td>Oakland Athletics</td>\n      <td>17.0</td>\n      <td>26.0</td>\n      <td>0.0</td>\n      <td>39.5</td>\n    </tr>\n    <tr>\n      <td>San Diego Padres</td>\n      <td>17.0</td>\n      <td>26.0</td>\n      <td>0.0</td>\n      <td>39.5</td>\n    </tr>\n    <tr>\n      <td>Minnesota Twins</td>\n      <td>17.0</td>\n      <td>26.0</td>\n      <td>0.0</td>\n      <td>39.5</td>\n    </tr>\n    <tr>\n      <td>Cleveland Indians</td>\n      <td>16.0</td>\n      <td>27.0</td>\n      <td>0.0</td>\n      <td>37.2</td>\n    </tr>\n    <tr>\n      <td>Kansas City Royals</td>\n      <td>15.0</td>\n      <td>28.0</td>\n      <td>0.0</td>\n      <td>34.9</td>\n    </tr>\n  </tbody>\n</table>\n```\n:::\n:::\n\n\n::: {#tbl-openingday-winpct-exposfix .cell tbl-cap='Opening Day Records, 1980 -- 2022, Expos and Nationals separated' execution_count=2}\n``` {.python .cell-code code-fold=\"true\" code-line-numbers=\"false\"}\nwlcntteam_bycity = pd.merge(wlcnt, pctteams[['current_team_id', 'hist_franchise_id', 'city', 'state']], left_index=True, right_on='hist_franchise_id', how=\"left\").groupby(['current_team_id','city'])[['W','L','T']].sum().reset_index()\n\nwlcntteam_bycity.loc[wlcntteam_bycity['city'] == \"Montreal\", \"current_team_id\"] = \"MON\"\n\nfinaltable_exposfix = pd.merge(wlcntteam_bycity, pctteams, left_on=['current_team_id','city'], right_on=['hist_franchise_id','city'], how=\"left\").assign(Team = lambda x: x['location'] + \" \" + x['nickname'], WnPct = lambda x: 100*round(x['W']/(x['W']+x['L']+x['T']), 3)).rename(columns={'W':'Wins','L':'Losses','T':'Ties', 'WnPct':'Win (%)'})[['Team','Wins','Losses','Ties', 'Win (%)']].sort_values(\"Win (%)\", ascending=False)\n\nHTML(finaltable_exposfix.to_html(index=False))  \n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>Team</th>\n      <th>Wins</th>\n      <th>Losses</th>\n      <th>Ties</th>\n      <th>Win (%)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>New York Mets</td>\n      <td>31.0</td>\n      <td>12.0</td>\n      <td>0.0</td>\n      <td>72.1</td>\n    </tr>\n    <tr>\n      <td>Baltimore Orioles</td>\n      <td>28.0</td>\n      <td>15.0</td>\n      <td>0.0</td>\n      <td>65.1</td>\n    </tr>\n    <tr>\n      <td>Seattle Mariners</td>\n      <td>26.0</td>\n      <td>17.0</td>\n      <td>0.0</td>\n      <td>60.5</td>\n    </tr>\n    <tr>\n      <td>Chicago White Sox</td>\n      <td>25.0</td>\n      <td>18.0</td>\n      <td>0.0</td>\n      <td>58.1</td>\n    </tr>\n    <tr>\n      <td>Los Angeles Dodgers</td>\n      <td>25.0</td>\n      <td>18.0</td>\n      <td>0.0</td>\n      <td>58.1</td>\n    </tr>\n    <tr>\n      <td>Detroit Tigers</td>\n      <td>25.0</td>\n      <td>18.0</td>\n      <td>0.0</td>\n      <td>58.1</td>\n    </tr>\n    <tr>\n      <td>Cincinnati Reds</td>\n      <td>24.0</td>\n      <td>18.0</td>\n      <td>1.0</td>\n      <td>55.8</td>\n    </tr>\n    <tr>\n      <td>Toronto Blue Jays</td>\n      <td>23.0</td>\n      <td>20.0</td>\n      <td>0.0</td>\n      <td>53.5</td>\n    </tr>\n    <tr>\n      <td>Houston Astros</td>\n      <td>23.0</td>\n      <td>20.0</td>\n      <td>0.0</td>\n      <td>53.5</td>\n    </tr>\n    <tr>\n      <td>St. Louis Cardinals</td>\n      <td>23.0</td>\n      <td>20.0</td>\n      <td>0.0</td>\n      <td>53.5</td>\n    </tr>\n    <tr>\n      <td>San Francisco Giants</td>\n      <td>23.0</td>\n      <td>20.0</td>\n      <td>0.0</td>\n      <td>53.5</td>\n    </tr>\n    <tr>\n      <td>New York Yankees</td>\n      <td>23.0</td>\n      <td>20.0</td>\n      <td>0.0</td>\n      <td>53.5</td>\n    </tr>\n    <tr>\n      <td>Colorado Rockies</td>\n      <td>16.0</td>\n      <td>14.0</td>\n      <td>0.0</td>\n      <td>53.3</td>\n    </tr>\n    <tr>\n      <td>Tampa Bay Rays</td>\n      <td>13.0</td>\n      <td>12.0</td>\n      <td>0.0</td>\n      <td>52.0</td>\n    </tr>\n    <tr>\n      <td>Arizona Diamondbacks</td>\n      <td>13.0</td>\n      <td>12.0</td>\n      <td>0.0</td>\n      <td>52.0</td>\n    </tr>\n    <tr>\n      <td>Atlanta Braves</td>\n      <td>22.0</td>\n      <td>21.0</td>\n      <td>0.0</td>\n      <td>51.2</td>\n    </tr>\n    <tr>\n      <td>Milwaukee Brewers</td>\n      <td>22.0</td>\n      <td>20.0</td>\n      <td>1.0</td>\n      <td>51.2</td>\n    </tr>\n    <tr>\n      <td>Chicago Cubs</td>\n      <td>21.0</td>\n      <td>22.0</td>\n      <td>0.0</td>\n      <td>48.8</td>\n    </tr>\n    <tr>\n      <td>Montreal Expos</td>\n      <td>12.0</td>\n      <td>13.0</td>\n      <td>0.0</td>\n      <td>48.0</td>\n    </tr>\n    <tr>\n      <td>Pittsburgh Pirates</td>\n      <td>20.0</td>\n      <td>23.0</td>\n      <td>0.0</td>\n      <td>46.5</td>\n    </tr>\n    <tr>\n      <td>Los Angeles Angels</td>\n      <td>20.0</td>\n      <td>23.0</td>\n      <td>0.0</td>\n      <td>46.5</td>\n    </tr>\n    <tr>\n      <td>Boston Red Sox</td>\n      <td>20.0</td>\n      <td>23.0</td>\n      <td>0.0</td>\n      <td>46.5</td>\n    </tr>\n    <tr>\n      <td>Washington Nationals</td>\n      <td>8.0</td>\n      <td>10.0</td>\n      <td>0.0</td>\n      <td>44.4</td>\n    </tr>\n    <tr>\n      <td>Texas Rangers</td>\n      <td>19.0</td>\n      <td>24.0</td>\n      <td>0.0</td>\n      <td>44.2</td>\n    </tr>\n    <tr>\n      <td>Miami Marlins</td>\n      <td>12.0</td>\n      <td>18.0</td>\n      <td>0.0</td>\n      <td>40.0</td>\n    </tr>\n    <tr>\n      <td>Philadelphia Phillies</td>\n      <td>17.0</td>\n      <td>26.0</td>\n      <td>0.0</td>\n      <td>39.5</td>\n    </tr>\n    <tr>\n      <td>San Diego Padres</td>\n      <td>17.0</td>\n      <td>26.0</td>\n      <td>0.0</td>\n      <td>39.5</td>\n    </tr>\n    <tr>\n      <td>Oakland Athletics</td>\n      <td>17.0</td>\n      <td>26.0</td>\n      <td>0.0</td>\n      <td>39.5</td>\n    </tr>\n    <tr>\n      <td>Minnesota Twins</td>\n      <td>17.0</td>\n      <td>26.0</td>\n      <td>0.0</td>\n      <td>39.5</td>\n    </tr>\n    <tr>\n      <td>Cleveland Indians</td>\n      <td>16.0</td>\n      <td>27.0</td>\n      <td>0.0</td>\n      <td>37.2</td>\n    </tr>\n    <tr>\n      <td>Kansas City Royals</td>\n      <td>15.0</td>\n      <td>28.0</td>\n      <td>0.0</td>\n      <td>34.9</td>\n    </tr>\n  </tbody>\n</table>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "index_files/figure-html"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}